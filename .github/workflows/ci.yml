name: CI

on:
  push:
  pull_request:


env:
  CARGO_TERM_COLOR: always
  # See https://rustmagazine.org/issue-2/optimize-rust-comptime/#step-3:-disable-incremental-compilation
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: 1

jobs:

  typos:
    name: Check for typos
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Install typos CLI
        run: cargo install typos-cli
      - name: Check for typos
        run: typos --color always --format long
  
  rustfmt:
    name: Verify code formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt
      - name: Check with rustfmt
        run: cargo +nightly fmt --all --check -- --config-path rustfmt.toml

  deny:
    name: Run cargo-deny
    runs-on: ubuntu-latest
    steps:
      - name: Set up required tools
        run: |
          sudo apt-get update \
            && sudo apt-get install curl build-essential -y
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Set up cache
        uses: Swatinem/rust-cache@v2
      - name: Install cargo-deny
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-deny@0.14.24
      - name: Run cargo-deny
        run: cargo deny --all-features --workspace check

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Tests MSRV and the latest stable.
        rust-version: ["1.77", "stable"]
    steps:
      - name: Set up required tools
        run: |
          sudo apt-get update \
            && sudo apt-get install curl build-essential -y
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
      - name: "Install Rust"
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-version }}
      - name: Set up cache
        uses: Swatinem/rust-cache@v2
      - name: Install nextest and cargo-hack
        uses: taiki-e/install-action@v2
        with:
          tool: nextest@0.9.70,cargo-hack@0.6.28
      - name: Build fs-more
        run: cargo build -p fs-more --lib --all-features
      - name: Build tests
        run: cargo build --tests --all-features
      - name: Build all
        run: cargo build --all-targets --all-features
      - name: Run doctests
        run: cargo test --workspace --doc --all-features
      - name: Run tests
        run: cargo hack --keep-going --feature-powerset --workspace nextest run --color always --all-targets --no-fail-fast
